package com.google.android.gms.internal.mlkit_common;

import com.google.android.exoplayer2.extractor.p015ts.TsExtractor;
import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;
/* compiled from: com.google.mlkit:common@@18.10.0 */
/* loaded from: classes.dex */
final class zzha implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzha zza = new zzha();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzbd;
    private static final FieldDescriptor zzbe;
    private static final FieldDescriptor zzbf;
    private static final FieldDescriptor zzbg;
    private static final FieldDescriptor zzbh;
    private static final FieldDescriptor zzbi;
    private static final FieldDescriptor zzbj;
    private static final FieldDescriptor zzbk;
    private static final FieldDescriptor zzbl;
    private static final FieldDescriptor zzbm;
    private static final FieldDescriptor zzbn;
    private static final FieldDescriptor zzbo;
    private static final FieldDescriptor zzbp;
    private static final FieldDescriptor zzbq;
    private static final FieldDescriptor zzbr;
    private static final FieldDescriptor zzbs;
    private static final FieldDescriptor zzbt;
    private static final FieldDescriptor zzbu;
    private static final FieldDescriptor zzbv;
    private static final FieldDescriptor zzbw;
    private static final FieldDescriptor zzbx;
    private static final FieldDescriptor zzby;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbj zzbjVar = new zzbj();
        zzbjVar.zza(1);
        zzb = builder.withProperty(zzbjVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzbj zzbjVar2 = new zzbj();
        zzbjVar2.zza(2);
        zzc = builder2.withProperty(zzbjVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbj zzbjVar3 = new zzbj();
        zzbjVar3.zza(37);
        zzd = builder3.withProperty(zzbjVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbj zzbjVar4 = new zzbj();
        zzbjVar4.zza(61);
        zze = builder4.withProperty(zzbjVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbj zzbjVar5 = new zzbj();
        zzbjVar5.zza(3);
        zzf = builder5.withProperty(zzbjVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbj zzbjVar6 = new zzbj();
        zzbjVar6.zza(20);
        zzg = builder6.withProperty(zzbjVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbj zzbjVar7 = new zzbj();
        zzbjVar7.zza(4);
        zzh = builder7.withProperty(zzbjVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbj zzbjVar8 = new zzbj();
        zzbjVar8.zza(29);
        zzi = builder8.withProperty(zzbjVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbj zzbjVar9 = new zzbj();
        zzbjVar9.zza(5);
        zzj = builder9.withProperty(zzbjVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbj zzbjVar10 = new zzbj();
        zzbjVar10.zza(59);
        zzk = builder10.withProperty(zzbjVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbj zzbjVar11 = new zzbj();
        zzbjVar11.zza(6);
        zzl = builder11.withProperty(zzbjVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzbj zzbjVar12 = new zzbj();
        zzbjVar12.zza(79);
        zzm = builder12.withProperty(zzbjVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbj zzbjVar13 = new zzbj();
        zzbjVar13.zza(7);
        zzn = builder13.withProperty(zzbjVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbj zzbjVar14 = new zzbj();
        zzbjVar14.zza(58);
        zzo = builder14.withProperty(zzbjVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbj zzbjVar15 = new zzbj();
        zzbjVar15.zza(48);
        zzp = builder15.withProperty(zzbjVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbj zzbjVar16 = new zzbj();
        zzbjVar16.zza(49);
        zzq = builder16.withProperty(zzbjVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbj zzbjVar17 = new zzbj();
        zzbjVar17.zza(18);
        zzr = builder17.withProperty(zzbjVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbj zzbjVar18 = new zzbj();
        zzbjVar18.zza(26);
        zzs = builder18.withProperty(zzbjVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbj zzbjVar19 = new zzbj();
        zzbjVar19.zza(27);
        zzt = builder19.withProperty(zzbjVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbj zzbjVar20 = new zzbj();
        zzbjVar20.zza(28);
        zzu = builder20.withProperty(zzbjVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbj zzbjVar21 = new zzbj();
        zzbjVar21.zza(44);
        zzv = builder21.withProperty(zzbjVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbj zzbjVar22 = new zzbj();
        zzbjVar22.zza(45);
        zzw = builder22.withProperty(zzbjVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbj zzbjVar23 = new zzbj();
        zzbjVar23.zza(19);
        zzx = builder23.withProperty(zzbjVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbj zzbjVar24 = new zzbj();
        zzbjVar24.zza(21);
        zzy = builder24.withProperty(zzbjVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbj zzbjVar25 = new zzbj();
        zzbjVar25.zza(22);
        zzz = builder25.withProperty(zzbjVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbj zzbjVar26 = new zzbj();
        zzbjVar26.zza(8);
        zzA = builder26.withProperty(zzbjVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbj zzbjVar27 = new zzbj();
        zzbjVar27.zza(9);
        zzB = builder27.withProperty(zzbjVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbj zzbjVar28 = new zzbj();
        zzbjVar28.zza(10);
        zzC = builder28.withProperty(zzbjVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbj zzbjVar29 = new zzbj();
        zzbjVar29.zza(11);
        zzD = builder29.withProperty(zzbjVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbj zzbjVar30 = new zzbj();
        zzbjVar30.zza(12);
        zzE = builder30.withProperty(zzbjVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbj zzbjVar31 = new zzbj();
        zzbjVar31.zza(13);
        zzF = builder31.withProperty(zzbjVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbj zzbjVar32 = new zzbj();
        zzbjVar32.zza(14);
        zzG = builder32.withProperty(zzbjVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbj zzbjVar33 = new zzbj();
        zzbjVar33.zza(15);
        zzH = builder33.withProperty(zzbjVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbj zzbjVar34 = new zzbj();
        zzbjVar34.zza(16);
        zzI = builder34.withProperty(zzbjVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbj zzbjVar35 = new zzbj();
        zzbjVar35.zza(17);
        zzJ = builder35.withProperty(zzbjVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbj zzbjVar36 = new zzbj();
        zzbjVar36.zza(23);
        zzK = builder36.withProperty(zzbjVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbj zzbjVar37 = new zzbj();
        zzbjVar37.zza(24);
        zzL = builder37.withProperty(zzbjVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbj zzbjVar38 = new zzbj();
        zzbjVar38.zza(25);
        zzM = builder38.withProperty(zzbjVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbj zzbjVar39 = new zzbj();
        zzbjVar39.zza(39);
        zzN = builder39.withProperty(zzbjVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbj zzbjVar40 = new zzbj();
        zzbjVar40.zza(40);
        zzO = builder40.withProperty(zzbjVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbj zzbjVar41 = new zzbj();
        zzbjVar41.zza(30);
        zzP = builder41.withProperty(zzbjVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbj zzbjVar42 = new zzbj();
        zzbjVar42.zza(31);
        zzQ = builder42.withProperty(zzbjVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbj zzbjVar43 = new zzbj();
        zzbjVar43.zza(32);
        zzR = builder43.withProperty(zzbjVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbj zzbjVar44 = new zzbj();
        zzbjVar44.zza(33);
        zzS = builder44.withProperty(zzbjVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbj zzbjVar45 = new zzbj();
        zzbjVar45.zza(34);
        zzT = builder45.withProperty(zzbjVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbj zzbjVar46 = new zzbj();
        zzbjVar46.zza(35);
        zzU = builder46.withProperty(zzbjVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbj zzbjVar47 = new zzbj();
        zzbjVar47.zza(36);
        zzV = builder47.withProperty(zzbjVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbj zzbjVar48 = new zzbj();
        zzbjVar48.zza(46);
        zzW = builder48.withProperty(zzbjVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbj zzbjVar49 = new zzbj();
        zzbjVar49.zza(47);
        zzX = builder49.withProperty(zzbjVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbj zzbjVar50 = new zzbj();
        zzbjVar50.zza(69);
        zzY = builder50.withProperty(zzbjVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbj zzbjVar51 = new zzbj();
        zzbjVar51.zza(42);
        zzZ = builder51.withProperty(zzbjVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbj zzbjVar52 = new zzbj();
        zzbjVar52.zza(50);
        zzaa = builder52.withProperty(zzbjVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzbj zzbjVar53 = new zzbj();
        zzbjVar53.zza(51);
        zzab = builder53.withProperty(zzbjVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbj zzbjVar54 = new zzbj();
        zzbjVar54.zza(52);
        zzac = builder54.withProperty(zzbjVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbj zzbjVar55 = new zzbj();
        zzbjVar55.zza(53);
        zzad = builder55.withProperty(zzbjVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbj zzbjVar56 = new zzbj();
        zzbjVar56.zza(54);
        zzae = builder56.withProperty(zzbjVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbj zzbjVar57 = new zzbj();
        zzbjVar57.zza(60);
        zzaf = builder57.withProperty(zzbjVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzbj zzbjVar58 = new zzbj();
        zzbjVar58.zza(85);
        zzag = builder58.withProperty(zzbjVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzbj zzbjVar59 = new zzbj();
        zzbjVar59.zza(86);
        zzah = builder59.withProperty(zzbjVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzbj zzbjVar60 = new zzbj();
        zzbjVar60.zza(87);
        zzai = builder60.withProperty(zzbjVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbj zzbjVar61 = new zzbj();
        zzbjVar61.zza(55);
        zzaj = builder61.withProperty(zzbjVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbj zzbjVar62 = new zzbj();
        zzbjVar62.zza(56);
        zzak = builder62.withProperty(zzbjVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbj zzbjVar63 = new zzbj();
        zzbjVar63.zza(57);
        zzal = builder63.withProperty(zzbjVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbj zzbjVar64 = new zzbj();
        zzbjVar64.zza(62);
        zzam = builder64.withProperty(zzbjVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbj zzbjVar65 = new zzbj();
        zzbjVar65.zza(63);
        zzan = builder65.withProperty(zzbjVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbj zzbjVar66 = new zzbj();
        zzbjVar66.zza(64);
        zzao = builder66.withProperty(zzbjVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbj zzbjVar67 = new zzbj();
        zzbjVar67.zza(65);
        zzap = builder67.withProperty(zzbjVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbj zzbjVar68 = new zzbj();
        zzbjVar68.zza(66);
        zzaq = builder68.withProperty(zzbjVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbj zzbjVar69 = new zzbj();
        zzbjVar69.zza(67);
        zzar = builder69.withProperty(zzbjVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbj zzbjVar70 = new zzbj();
        zzbjVar70.zza(68);
        zzas = builder70.withProperty(zzbjVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbj zzbjVar71 = new zzbj();
        zzbjVar71.zza(70);
        zzat = builder71.withProperty(zzbjVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbj zzbjVar72 = new zzbj();
        zzbjVar72.zza(71);
        zzau = builder72.withProperty(zzbjVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbj zzbjVar73 = new zzbj();
        zzbjVar73.zza(72);
        zzav = builder73.withProperty(zzbjVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbj zzbjVar74 = new zzbj();
        zzbjVar74.zza(73);
        zzaw = builder74.withProperty(zzbjVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzbj zzbjVar75 = new zzbj();
        zzbjVar75.zza(74);
        zzax = builder75.withProperty(zzbjVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzbj zzbjVar76 = new zzbj();
        zzbjVar76.zza(75);
        zzay = builder76.withProperty(zzbjVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzbj zzbjVar77 = new zzbj();
        zzbjVar77.zza(76);
        zzaz = builder77.withProperty(zzbjVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzbj zzbjVar78 = new zzbj();
        zzbjVar78.zza(77);
        zzaA = builder78.withProperty(zzbjVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzbj zzbjVar79 = new zzbj();
        zzbjVar79.zza(78);
        zzaB = builder79.withProperty(zzbjVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzbj zzbjVar80 = new zzbj();
        zzbjVar80.zza(80);
        zzaC = builder80.withProperty(zzbjVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzbj zzbjVar81 = new zzbj();
        zzbjVar81.zza(81);
        zzaD = builder81.withProperty(zzbjVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzbj zzbjVar82 = new zzbj();
        zzbjVar82.zza(82);
        zzaE = builder82.withProperty(zzbjVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzbj zzbjVar83 = new zzbj();
        zzbjVar83.zza(83);
        zzaF = builder83.withProperty(zzbjVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzbj zzbjVar84 = new zzbj();
        zzbjVar84.zza(84);
        zzaG = builder84.withProperty(zzbjVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzbj zzbjVar85 = new zzbj();
        zzbjVar85.zza(88);
        zzaH = builder85.withProperty(zzbjVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzbj zzbjVar86 = new zzbj();
        zzbjVar86.zza(89);
        zzaI = builder86.withProperty(zzbjVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzbj zzbjVar87 = new zzbj();
        zzbjVar87.zza(90);
        zzaJ = builder87.withProperty(zzbjVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzbj zzbjVar88 = new zzbj();
        zzbjVar88.zza(91);
        zzaK = builder88.withProperty(zzbjVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzbj zzbjVar89 = new zzbj();
        zzbjVar89.zza(92);
        zzaL = builder89.withProperty(zzbjVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzbj zzbjVar90 = new zzbj();
        zzbjVar90.zza(93);
        zzaM = builder90.withProperty(zzbjVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzbj zzbjVar91 = new zzbj();
        zzbjVar91.zza(94);
        zzaN = builder91.withProperty(zzbjVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzbj zzbjVar92 = new zzbj();
        zzbjVar92.zza(95);
        zzaO = builder92.withProperty(zzbjVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzbj zzbjVar93 = new zzbj();
        zzbjVar93.zza(96);
        zzaP = builder93.withProperty(zzbjVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzbj zzbjVar94 = new zzbj();
        zzbjVar94.zza(97);
        zzaQ = builder94.withProperty(zzbjVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzbj zzbjVar95 = new zzbj();
        zzbjVar95.zza(98);
        zzaR = builder95.withProperty(zzbjVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzbj zzbjVar96 = new zzbj();
        zzbjVar96.zza(99);
        zzaS = builder96.withProperty(zzbjVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzbj zzbjVar97 = new zzbj();
        zzbjVar97.zza(100);
        zzaT = builder97.withProperty(zzbjVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzbj zzbjVar98 = new zzbj();
        zzbjVar98.zza(101);
        zzaU = builder98.withProperty(zzbjVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzbj zzbjVar99 = new zzbj();
        zzbjVar99.zza(102);
        zzaV = builder99.withProperty(zzbjVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzbj zzbjVar100 = new zzbj();
        zzbjVar100.zza(103);
        zzaW = builder100.withProperty(zzbjVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzbj zzbjVar101 = new zzbj();
        zzbjVar101.zza(104);
        zzaX = builder101.withProperty(zzbjVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzbj zzbjVar102 = new zzbj();
        zzbjVar102.zza(105);
        zzaY = builder102.withProperty(zzbjVar102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzbj zzbjVar103 = new zzbj();
        zzbjVar103.zza(106);
        zzaZ = builder103.withProperty(zzbjVar103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzbj zzbjVar104 = new zzbj();
        zzbjVar104.zza(107);
        zzba = builder104.withProperty(zzbjVar104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzbj zzbjVar105 = new zzbj();
        zzbjVar105.zza(108);
        zzbb = builder105.withProperty(zzbjVar105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzbj zzbjVar106 = new zzbj();
        zzbjVar106.zza(109);
        zzbc = builder106.withProperty(zzbjVar106.zzb()).build();
        FieldDescriptor.Builder builder107 = FieldDescriptor.builder("onDeviceStainRemovalLogEvent");
        zzbj zzbjVar107 = new zzbj();
        zzbjVar107.zza(110);
        zzbd = builder107.withProperty(zzbjVar107.zzb()).build();
        FieldDescriptor.Builder builder108 = FieldDescriptor.builder("aggregatedOnDeviceStainRemovalLogEvent");
        zzbj zzbjVar108 = new zzbj();
        zzbjVar108.zza(111);
        zzbe = builder108.withProperty(zzbjVar108.zzb()).build();
        FieldDescriptor.Builder builder109 = FieldDescriptor.builder("stainRemovalOptionalModuleLogEvent");
        zzbj zzbjVar109 = new zzbj();
        zzbjVar109.zza(112);
        zzbf = builder109.withProperty(zzbjVar109.zzb()).build();
        FieldDescriptor.Builder builder110 = FieldDescriptor.builder("onDeviceShadowRemovalLogEvent");
        zzbj zzbjVar110 = new zzbj();
        zzbjVar110.zza(113);
        zzbg = builder110.withProperty(zzbjVar110.zzb()).build();
        FieldDescriptor.Builder builder111 = FieldDescriptor.builder("aggregatedOnDeviceShadowRemovalLogEvent");
        zzbj zzbjVar111 = new zzbj();
        zzbjVar111.zza(114);
        zzbh = builder111.withProperty(zzbjVar111.zzb()).build();
        FieldDescriptor.Builder builder112 = FieldDescriptor.builder("shadowRemovalOptionalModuleLogEvent");
        zzbj zzbjVar112 = new zzbj();
        zzbjVar112.zza(115);
        zzbi = builder112.withProperty(zzbjVar112.zzb()).build();
        FieldDescriptor.Builder builder113 = FieldDescriptor.builder("onDeviceDigitalInkSegmentationLogEvent");
        zzbj zzbjVar113 = new zzbj();
        zzbjVar113.zza(116);
        zzbj = builder113.withProperty(zzbjVar113.zzb()).build();
        FieldDescriptor.Builder builder114 = FieldDescriptor.builder("onDeviceDocumentScannerStartLogEvent");
        zzbj zzbjVar114 = new zzbj();
        zzbjVar114.zza(117);
        zzbk = builder114.withProperty(zzbjVar114.zzb()).build();
        FieldDescriptor.Builder builder115 = FieldDescriptor.builder("onDeviceDocumentScannerFinishLogEvent");
        zzbj zzbjVar115 = new zzbj();
        zzbjVar115.zza(118);
        zzbl = builder115.withProperty(zzbjVar115.zzb()).build();
        FieldDescriptor.Builder builder116 = FieldDescriptor.builder("onDeviceDocumentScannerUiStartLogEvent");
        zzbj zzbjVar116 = new zzbj();
        zzbjVar116.zza(119);
        zzbm = builder116.withProperty(zzbjVar116.zzb()).build();
        FieldDescriptor.Builder builder117 = FieldDescriptor.builder("onDeviceDocumentScannerUiFinishLogEvent");
        zzbj zzbjVar117 = new zzbj();
        zzbjVar117.zza(120);
        zzbn = builder117.withProperty(zzbjVar117.zzb()).build();
        FieldDescriptor.Builder builder118 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionStartLogEvent");
        zzbj zzbjVar118 = new zzbj();
        zzbjVar118.zza(121);
        zzbo = builder118.withProperty(zzbjVar118.zzb()).build();
        FieldDescriptor.Builder builder119 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionFinishLogEvent");
        zzbj zzbjVar119 = new zzbj();
        zzbjVar119.zza(122);
        zzbp = builder119.withProperty(zzbjVar119.zzb()).build();
        FieldDescriptor.Builder builder120 = FieldDescriptor.builder("onDeviceDocumentScannerUiCreateLogEvent");
        zzbj zzbjVar120 = new zzbj();
        zzbjVar120.zza(123);
        zzbq = builder120.withProperty(zzbjVar120.zzb()).build();
        FieldDescriptor.Builder builder121 = FieldDescriptor.builder("onDeviceSubjectSegmentationCreateLogEvent");
        zzbj zzbjVar121 = new zzbj();
        zzbjVar121.zza(124);
        zzbr = builder121.withProperty(zzbjVar121.zzb()).build();
        FieldDescriptor.Builder builder122 = FieldDescriptor.builder("onDeviceSubjectSegmentationLoadLogEvent");
        zzbj zzbjVar122 = new zzbj();
        zzbjVar122.zza(125);
        zzbs = builder122.withProperty(zzbjVar122.zzb()).build();
        FieldDescriptor.Builder builder123 = FieldDescriptor.builder("onDeviceSubjectSegmentationInferenceLogEvent");
        zzbj zzbjVar123 = new zzbj();
        zzbjVar123.zza(126);
        zzbt = builder123.withProperty(zzbjVar123.zzb()).build();
        FieldDescriptor.Builder builder124 = FieldDescriptor.builder("aggregatedOnDeviceSubjectSegmentationLogEvent");
        zzbj zzbjVar124 = new zzbj();
        zzbjVar124.zza(127);
        zzbu = builder124.withProperty(zzbjVar124.zzb()).build();
        FieldDescriptor.Builder builder125 = FieldDescriptor.builder("subjectSegmentationOptionalModuleLogEvent");
        zzbj zzbjVar125 = new zzbj();
        zzbjVar125.zza(128);
        zzbv = builder125.withProperty(zzbjVar125.zzb()).build();
        FieldDescriptor.Builder builder126 = FieldDescriptor.builder("documentScannerUiModuleScreenViewEvent");
        zzbj zzbjVar126 = new zzbj();
        zzbjVar126.zza(TsExtractor.TS_STREAM_TYPE_AC3);
        zzbw = builder126.withProperty(zzbjVar126.zzb()).build();
        FieldDescriptor.Builder builder127 = FieldDescriptor.builder("documentScannerUiModuleScreenClickEvent");
        zzbj zzbjVar127 = new zzbj();
        zzbjVar127.zza(TsExtractor.TS_STREAM_TYPE_HDMV_DTS);
        zzbx = builder127.withProperty(zzbjVar127.zzb()).build();
        FieldDescriptor.Builder builder128 = FieldDescriptor.builder("documentScannerUiModuleScreenErrorEvent");
        zzbj zzbjVar128 = new zzbj();
        zzbjVar128.zza(131);
        zzby = builder128.withProperty(zzbjVar128.zzb()).build();
    }

    private zzha() {
    }

    @Override // com.google.firebase.encoders.ObjectEncoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zznj zznjVar = (zznj) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, zznjVar.zzf());
        objectEncoderContext.add(zzc, zznjVar.zzd());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) null);
        objectEncoderContext.add(zzf, zznjVar.zze());
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, zznjVar.zzb());
        objectEncoderContext.add(zzO, zznjVar.zza());
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, zznjVar.zzc());
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
        objectEncoderContext.add(zzaz, (Object) null);
        objectEncoderContext.add(zzaA, (Object) null);
        objectEncoderContext.add(zzaB, (Object) null);
        objectEncoderContext.add(zzaC, (Object) null);
        objectEncoderContext.add(zzaD, (Object) null);
        objectEncoderContext.add(zzaE, (Object) null);
        objectEncoderContext.add(zzaF, (Object) null);
        objectEncoderContext.add(zzaG, (Object) null);
        objectEncoderContext.add(zzaH, (Object) null);
        objectEncoderContext.add(zzaI, (Object) null);
        objectEncoderContext.add(zzaJ, (Object) null);
        objectEncoderContext.add(zzaK, (Object) null);
        objectEncoderContext.add(zzaL, (Object) null);
        objectEncoderContext.add(zzaM, (Object) null);
        objectEncoderContext.add(zzaN, (Object) null);
        objectEncoderContext.add(zzaO, (Object) null);
        objectEncoderContext.add(zzaP, (Object) null);
        objectEncoderContext.add(zzaQ, (Object) null);
        objectEncoderContext.add(zzaR, (Object) null);
        objectEncoderContext.add(zzaS, (Object) null);
        objectEncoderContext.add(zzaT, (Object) null);
        objectEncoderContext.add(zzaU, (Object) null);
        objectEncoderContext.add(zzaV, (Object) null);
        objectEncoderContext.add(zzaW, (Object) null);
        objectEncoderContext.add(zzaX, (Object) null);
        objectEncoderContext.add(zzaY, (Object) null);
        objectEncoderContext.add(zzaZ, (Object) null);
        objectEncoderContext.add(zzba, (Object) null);
        objectEncoderContext.add(zzbb, (Object) null);
        objectEncoderContext.add(zzbc, (Object) null);
        objectEncoderContext.add(zzbd, (Object) null);
        objectEncoderContext.add(zzbe, (Object) null);
        objectEncoderContext.add(zzbf, (Object) null);
        objectEncoderContext.add(zzbg, (Object) null);
        objectEncoderContext.add(zzbh, (Object) null);
        objectEncoderContext.add(zzbi, (Object) null);
        objectEncoderContext.add(zzbj, (Object) null);
        objectEncoderContext.add(zzbk, (Object) null);
        objectEncoderContext.add(zzbl, (Object) null);
        objectEncoderContext.add(zzbm, (Object) null);
        objectEncoderContext.add(zzbn, (Object) null);
        objectEncoderContext.add(zzbo, (Object) null);
        objectEncoderContext.add(zzbp, (Object) null);
        objectEncoderContext.add(zzbq, (Object) null);
        objectEncoderContext.add(zzbr, (Object) null);
        objectEncoderContext.add(zzbs, (Object) null);
        objectEncoderContext.add(zzbt, (Object) null);
        objectEncoderContext.add(zzbu, (Object) null);
        objectEncoderContext.add(zzbv, (Object) null);
        objectEncoderContext.add(zzbw, (Object) null);
        objectEncoderContext.add(zzbx, (Object) null);
        objectEncoderContext.add(zzby, (Object) null);
    }
}
